{"version":3,"sources":["components/FeedbackOptions/index.js","components/Statistics/index.js","components/Section/index.js","components/Notification/index.js","components/FeedbackWidget/index.js","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","className","map","option","key","value","onClick","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","Notification","message","FeedbackWidget","state","feedbackHandler","e","target","setState","countTotalFeedback","Object","values","reduce","a","c","countPositiveFeedbackPercentage","totalFeedback","Math","round","this","keys","Component","App","ReactDOM","render","document","getElementById"],"mappings":"2PAyBeA,G,MApBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,yBAAKC,UAAU,oBACZF,EAAQG,KAAI,SAACC,GAAD,OACX,4BACEC,IAAKD,EACLF,UAAU,SACVI,MAAOF,EACPG,QAASN,GAERG,SCOMI,EAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,6BACE,sCAAYJ,GACZ,yCAAeC,GACf,qCAAWC,GACX,uCAAaC,GACb,mDAAyBC,EAAzB,OCMWC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,yBAAKd,UAAU,WACb,4BAAKa,GACJC,ICGUC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,ICwD3BC,G,kNAjDbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,gBAAkB,SAACC,GACjB,IAAMjB,EAAMiB,EAAEC,OAAOjB,MACrB,EAAKkB,SAAL,eAAiBnB,EAAM,EAAKe,MAAMf,GAAO,K,EAG3CoB,mBAAqB,kBAAMC,OAAOC,OAAO,EAAKP,OAAOQ,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,M,EAE1EC,gCAAkC,WAAO,IAC/BtB,EAAS,EAAKW,MAAdX,KACFuB,EAAgB,EAAKP,qBAC3B,OAAOO,EAAgBC,KAAKC,MAAc,IAAPzB,EAAcuB,GAAiB,G,uDAG1D,IAAD,EACwBG,KAAKf,MAA5BX,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQuB,KAAKV,qBACbZ,EAAqBsB,KAAKJ,kCAChC,OACE,yBAAK7B,UAAU,mBACb,kBAAC,EAAD,CAASa,MAAM,yBACb,kBAAC,EAAD,CACEf,QAAS0B,OAAOU,KAAKD,KAAKf,OAC1BnB,gBAAiBkC,KAAKd,mBAG1B,kBAAC,EAAD,CAASN,MAAM,cACZH,EACC,kBAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,kBAAC,EAAD,CAAcK,QAAQ,4B,GA1CLmB,cCFdC,MAJf,WACE,OAAO,kBAAC,EAAD,OCATC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.27d43e4d.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./styles.scss\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <div className=\"feedback-options\">\n    {options.map((option) => (\n      <button\n        key={option}\n        className=\"button\"\n        value={option}\n        onClick={onLeaveFeedback}\n      >\n        {option}\n      </button>\n    ))}\n  </div>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div>\n    <div>Good: {good}</div>\n    <div>Neutral: {neutral}</div>\n    <div>Bad: {bad}</div>\n    <div>Total: {total}</div>\n    <div>Positive feedback: {positivePercentage}%</div>\n  </div>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => (\n  <div className=\"section\">\n    <h2>{title}</h2>\n    {children}\n  </div>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\n\nimport FeedbackOptions from \"../FeedbackOptions\";\nimport Statistics from \"../Statistics\";\nimport Section from \"../Section\";\nimport Notification from \"../Notification\";\n\nimport \"./styles.scss\";\n\nclass FeedbackWidget extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  feedbackHandler = (e) => {\n    const key = e.target.value;\n    this.setState({ [key]: this.state[key] + 1 });\n  };\n\n  countTotalFeedback = () => Object.values(this.state).reduce((a, c) => a + c);\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    return totalFeedback ? Math.round((good * 100) / totalFeedback) : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    return (\n      <div className=\"feedback-widget\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.feedbackHandler}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default FeedbackWidget;\n","import React from \"react\";\nimport FeedbackWidget from \"./components/FeedbackWidget\";\n\nfunction App() {\n  return <FeedbackWidget />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}